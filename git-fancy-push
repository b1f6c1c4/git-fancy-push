#!/bin/bash

set -euo pipefail

VERBOSE=
if [ "$#" -gt 0 ] && [ "$1" = "--execute" ]; then
    commit_to_json() {
        git cat-file commit "$SHA1" | awk '
        ' | jq "$(git cat-file commit "$SHA1" | awk '')"
    }

    shift
    [ "$1" = "--verbose" ] && VERBOSE=YES && shift
    [ -n "$VERBOSE" ] && printf 'args: %q\n' "$@" >&2
    GH="$1"
    URL="$2"
    REF="$3"
    SHA1="$4"
    TOKEN="$(cat ~/.hub-sync)" # FIXME: token

    if curl -fs -o /dev/null "https://api.github.com/repos/$GH/git/trees/$T" -H "Authorization: token $TOKEN"
    exit 0
fi

look_for() {
    T="$1"
    shift
    while [ "$#" -gt 0 ]; do
        [ "$1" = "$T" ] && return 0
        shift
    done
    return 1
}

(look_for "-v" "$@" || look_for "--verbose" "$@") && VERBOSE=YES

# Run git push
TLOG="$(mktemp)"
finish_2() {
    rm -f "$TLOG"
}
trap finish_2 EXIT
set +e
git push --porcelain "$@" | tee "$TLOG"
R="$?"
set -e

# Check if no shallow update
grep -q '\s\[remote rejected\] (shallow update not allowed)$' "$TLOG" || exit "$R"

awk '
    /^To/ { gh=""; u=""; }

    /^To github.com:/ {
        gh=$2;
        sub(/^github.com:/, "", gh);
        sub(/.git$/, "", gh);
        u="git@github.com:" gh ".git";
    }

    /^To https:\/\/github.com\// {
        gh=$2;
        sub(/https:\/\/github.com\//, "", gh);
        sub(/.git$/, "", gh);
        u="https://github.com/" gh ".git";
    }

    /^!\s\S+:\S+\s\[remote rejected\] \(shallow update not allowed\)$/ {
        if (gh != "") {
            s=$2; sub(/:.*$/, "", s);
            t=$2; sub(/^.*:/, "", t);
            printf "%s %s %s ", gh, u, t;
            if (system("git rev-parse " s) != 0) {
                exit 1;
            }
        } else {
            # TODO
        }
    }
' "$TLOG" | (
if [ -n "$VERBOSE" ]; then
    tee /dev/stderr | xargs -L 1 "$0" --execute --verbose
else
    xargs -L 1 "$0" --execute
fi
)
